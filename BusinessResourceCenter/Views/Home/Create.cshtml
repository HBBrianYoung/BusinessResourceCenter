@model BusinessResourceCenter.Models.workflows

@{
    ViewBag.Title = "Create New Project";
}

<script type="text/javascript" src="~/Scripts/jquery-ui-timepicker-addon.js"></script>
<script src="~/Scripts/jquery-ui-sliderAccess.js" type="text/javascript"></script>
<link rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.11.4/themes/smoothness/jquery-ui.css">

<link rel="stylesheet" type="text/css" href="~/Content/jquery-ui-timepicker-addon.css" />
<script>
    
    jQuery.ui.autocomplete.prototype._resizeMenu = function () {
        var ul = this.menu.element;
        ul.outerWidth(this.element.outerWidth());
    }
    $(document).ready(function () {

        $('#requestordisp').autocomplete(
        {
            change: function (event, ui) {
                if (ui.item == null) {
                    $("#requestordisp").val('');
                    $("#requestordisp").focus();
                }
            },
            delay: 0,
            minLength: 3,
            maxResults: 10,
            source: function (query, response) {
                $.ajax(
                  {
                      url: "getAttorneyList",
                      dataType: "json",
                      async: false,
                      data: { searchPhrase: query.term },
                      success: function (result) {
                          response($.map(result, function (el) {
                              return {
                                  label: el.fullname,
                                  value: el.tkInit
                              };
                          }));
                      }
                  });
            },
            select: function (event, ui) {
                // Prevent value from being put in the input:
                this.value = ui.item.value;
                $('#requestordisp').val(ui.item.label);
                $('#requestor').val(ui.item.value);
                event.preventDefault();
            }
        });

        $('#deadline')
  .datetimepicker(
    {
        timeFormat: "hh:mm tt",
        stepHour: 1,
        stepMinute: 6,
        showTimezone: false,

        timezoneList: [
          { value: -300, label: 'EST' },
          { value: -360, label: 'CST' },
          { value: -420, label: 'MST' },
          { value: -480, label: 'PST' }
        ]
    });


        /*     $('#clientmatter')
       .autocomplete(
         {
             change: function (event, ui) {
                 if (ui.item == null) {
                     $("#clientmatter").val('');
                     $("#clientmatter").focus();
                 }
             },
             delay: 0,
             minLength: 3,
             maxResults: 10,
             source: function (query, response) {
                 $.ajax(
                   {
                       url: "getClientMatterList",
                       dataType: "json",
                       async: false,
                       data: { searchPhrase: query.term },
                       success: function (result) {
                           response($.map(result, function (el) {
                               return {
                                   label: el.MatterName,
                                   value: el.MatterNumber
                               };
                           }));
                       }
                   });
             },
             select: function (event, ui) {
                 // Prevent value from being put in the input:
                 this.value = ui.item.value;
                 $('#clientmatter').val(ui.item.label);
                 $('#clientmatterInit').val(ui.item.value);
                 event.preventDefault();
             }
         });*/

    });
</script>
<style>
    /* autocomplete adds the ui-autocomplete-loading class to the textbox when it is _busy_ */
    #mrequestor.ui-autocomplete-loading {
        background-image: url(images/loading.gif);
        background-position: right center;
        background-repeat: no-repeat;
    }

    .ui-autocomplete {
        background: #ffffff;
        height: 400px;
        overflow-y: scroll;
        overflow-x: hidden;
    }

    .error {
        color: red;
        text-transform: none;
    }
</style>

@using (Html.BeginForm())
{

    @Html.AntiForgeryToken()

    <table class="table">
        <tr>
            <td>Requesting Attorney</td>
            <td>
                <input type="text" id="requestordisp" name="requestordisp" placeholder="Start typing..." />
                <INPUT type="hidden" id="requestor" name="requestor">
            </td>
        </tr>
        <tr>
            <td>Submitter</td>
            <td>@User.Identity.Name.Substring(User.Identity.Name.LastIndexOf('\\') + 1)
            <input type="hidden" name="Submitter" id="Submitter" value="@User.Identity.Name.Substring(User.Identity.Name.LastIndexOf('\\') + 1)" /> </td>
        </tr>
        <tr>
            <td><font color="red">*</font> Client Matter / Section</td>
            <td>
                <input type="text" id="clientmatters" name="clientmatters" placeholder="" />
            </td>
        </tr>
        <tr>
            <td>Title</td>
            <td><input type="text" id="wfTitle" name="wfTitle" /></td>
        </tr>
        <tr>
            <td>Description of Work</td>
            <td><textarea id="descofwork" name="descofwork" cols="300" rows="10"></textarea></td>
        </tr>
        <tr>
            <td>Requested Deadline:</td>
            <td><input type="text" id="deadline" name="deadline" /></td>
        </tr>
        <tr>
            <td>Supporting Documents: ( NetDocs IDs)</td>
            <td><input type="text" id="netdocid" name="netdocid" placeholder="Insert Comma Seperated Net Docs ID..." /></td>
        </tr>
        <tr>
            <td>Upload Documents:</td>
            <td><input type="file" /></td>
        </tr>
        <tr>
            <td></td>
            <td><input type="submit" value="Submit Request" /></td>
        </tr>
    </table>
}
<font color="red">*</font> Required field